name: Deploy
on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: trandy-service
  CODE_DEPLOY_APPLICATION_NAME: trandy-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: trandy_app_deploygroup
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code.
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x' # 원하는 Node.js 버전
          cache: 'npm'         # npm 캐시 사용

      - name: Install specific npm version
        run: npm install -g npm@10.8.3 # 원하는 npm 버전 지정

      - name: Check Node v
        run: node -v
        
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
          # node_modules라는 폴더를 검사하여
          path: node_modules
          # 아래 키값으로 cache가 돼있는지 확인합니다.
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build
        run: |
          npm run build

      - name: zip create
        run: |
          zip -qq -r --symlinks  ./til-dev.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/deploy-frontend/$GITHUB_SHA.zip \
            --source .

      - name: Deploy For Development
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=deploy-frontend,bundleType=zip
